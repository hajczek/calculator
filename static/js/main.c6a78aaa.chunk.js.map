{"version":3,"sources":["components/Form.js","components/Display.js","App.js","index.js"],"names":["Form","props","onClick","displayVal","id","className","disabled","Display","value","result","actual","App","e","preventDefault","target","firstChild","nodeValue","allAction","document","getElementById","finishResult","equals","decimal","disabledNum","querySelector","nodeName","innerHTML","state","removeAttribute","classList","remove","textContent","includes","setAttribute","all","previousSign","substr","length","newAllAction","replace","attributes","setState","add","score","require","Parser","evaluate","toFixed","toString","shortScore","toPrecision","stopPropagation","this","Component","ReactDOM","render"],"mappings":"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","file":"static/js/main.c6a78aaa.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Form(props) {\r\n  return (\r\n    <form onClick={props.displayVal}>\r\n      <button id=\"clear\" className=\"ac\">AC</button>\r\n      <button id=\"add\" className=\"small act\">+</button>\r\n      <button id=\"subtract\" className=\"small act\">-</button>\r\n      <button id=\"multiply\" className=\"small act\">*</button>\r\n      <button id=\"divide\" className=\"small act\">/</button>\r\n      <button id=\"seven\" className=\"small num\">7</button>\r\n      <button id=\"eight\" className=\"small num\">8</button>\r\n      <button id=\"nine\" className=\"small num\">9</button>\r\n      <button id=\"four\" className=\"small num\">4</button>\r\n      <button id=\"five\" className=\"small num\">5</button>\r\n      <button id=\"six\" className=\"small num\">6</button>\r\n      <button id=\"one\" className=\"small num\">1</button>\r\n      <button id=\"two\" className=\"small num\">2</button>\r\n      <button id=\"three\" className=\"small num\">3</button>\r\n      <button id=\"zero\" className=\"small num\">0</button>\r\n      <button id=\"decimal\" className=\"small act\">.</button>\r\n      <button id='equals' className=\"small equal\" disabled>=</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\n\r\nfunction Display(props) {\r\n  return (\r\n    <div id=\"display\" className=\"result\" value=\"0\">\r\n      <p id=\"allAction\">{props.result}</p>\r\n      <p id=\"finishResult\">{props.actual}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Display;","import React, { Component } from 'react';\nimport Form from './components/Form';\nimport Display from './components/Display';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      result: 0,\n      actual: 0\n    }\n  }\n\n  displayVal = (e) => {\n\n    e.preventDefault();\n\n    // Defined handles\n    let value = e.target.firstChild.nodeValue;\n    let allAction = document.getElementById('allAction');\n    let finishResult = document.getElementById('finishResult');\n    let equals = document.getElementById('equals');\n    let decimal = document.getElementById('decimal');\n    let disabledNum = document.querySelector('[disabled=\"true\"]');\n\n    // Check if clicked element is not a 'FORM'\n    if (e.target.nodeName !== 'FORM') {\n\n      // Set new value for 'allAction' field\n      allAction.innerHTML += value;\n\n      // Display last action sign in 'actual' and 'finish' fields\n      if ((this.state.actual === '+'\n        || this.state.actual === '-'\n        || this.state.actual === '*'\n        || this.state.actual === '/')\n        && (value === '+'\n          || value === '-'\n          || value === '*'\n          || value === '/')\n      ) {\n        // Handle for value in allAction field\n        let all = allAction.textContent;\n\n        // Handle for last two sign in allAction field\n        let previousSign = all.substr(all.length - 2, 2);\n\n        // Handle for new value in allAction field\n        let newAllAction = all.replace(previousSign, value);\n\n        // Set newAllAction as a value od allAction field\n        allAction.innerHTML = newAllAction;\n\n        // Set new value for 'finishResult' field\n        finishResult.innerHTML = value;\n\n        // Remove attribute disabled from 'equals' button\n        equals.removeAttribute('disabled');\n      }\n      // Display only action sign in 'actual' field\n      else if (this.state.actual === '+'\n        || this.state.actual === '-'\n        || this.state.actual === '*'\n        || this.state.actual === '/'\n      ) {\n        // Set new value for 'finishResult' field\n        finishResult.innerHTML = value;\n\n        // Remove attribute disabled from 'equals' button\n        equals.removeAttribute('disabled');\n      }\n      // Set value for fields 'allAction' and 'finishResult' to '0'\n      else if (value === 'AC') {\n        allAction.innerHTML = 0;\n        finishResult.innerHTML = 0;\n\n        // Remove class 'clearAll' from fields 'allAction' and 'finishResult'\n        allAction.classList.remove('clearAll');\n        finishResult.classList.remove('clearAll');\n\n        // Remove disabled attribute if is on button with num \n        if (disabledNum) {\n          disabledNum.removeAttribute('disabled');\n        }\n      }\n      // Leave 0 if first clicked button is '.'\n      else if (value === '.'\n        && (this.state.result === 0 || this.state.result === '0')\n        && (this.state.actual === 0 || this.state.actual === '0')) {\n        // Add new value to field 'finishResult'\n        finishResult.innerHTML += value;\n      }\n      // Remove 0 if first clicked button is different than action button\n      else if ((this.state.result === 0 || this.state.result === '0')\n        && (this.state.actual === 0 || this.state.actual === '0')\n        && this.state.actual !== '+'\n        && this.state.actual !== '-'\n        && this.state.actual !== '*'\n        && this.state.actual !== '/') {\n        // Set new value for fields 'allAction' and 'finishResult'\n        allAction.innerHTML = value;\n        finishResult.innerHTML = value;\n      }\n      // Clear 0 from fields 'allAction' and 'finishResult' after click button with number\n      else if (allAction.textContent === '0'\n        && finishResult.textContent === '0'\n        && value !== '.'\n        && value !== 'AC'\n        && value !== '='\n      ) {\n        // Set new value for fields 'allAction' and 'finishResult'\n        allAction.innerHTML = value;\n        finishResult.innerHTML = value;\n      }\n      // Protection from add more signs '.' than one in number\n      else if (value === '.' && finishResult.textContent.includes('.')) {\n        // Set on button with decimal sign disabled attribute\n        decimal.setAttribute('disabled', 'true');\n\n        // Set result state value in 'allAction' field\n        allAction.innerHTML = this.state.result;\n\n      }\n      // Allows to set sign '.' in next number\n      else if (value === '.'\n        && finishResult.textContent.includes('.')\n        && this.state.result !== 0\n        && this.state.actual !== 0) {\n        // Set on button with decimal sign disabled attribute\n        decimal.setAttribute('disabled', 'true');\n\n        // Add new value to 'finishResult' field\n        finishResult.innerHTML += value;\n      }\n      // Display value with action sign when action sign is clicked after display result\n      else if (document.querySelector('.clearAll')\n        && (value === '+'\n          || value === '-'\n          || value === '/'\n          || value === '*')) {\n        allAction.classList.remove('clearAll');\n        finishResult.classList.remove('clearAll');\n\n        // Set new value in fields 'allAction' and 'finishResult'\n        finishResult.innerHTML = value;\n      }\n      // Display value with decimal sign when decimal sign is clicked after display result \n      else if (document.querySelector('.clearAll')\n        && value === '.') {\n        allAction.classList.remove('clearAll');\n        finishResult.classList.remove('clearAll');\n\n        // Set new value in fields 'allAction' and 'finishResult'\n        finishResult.innerHTML += value;\n      }\n      // Display only action sign in actual field\n      else if (value === '+'\n        || value === '-'\n        || value === '/'\n        || value === '*'\n      ) {\n        // Set new value in 'finishResult' field\n        finishResult.innerHTML = value;\n\n        // Remove disabled attribute from number, decimal and equals buttons after click button with action\n        decimal.removeAttribute('disabled');\n        equals.removeAttribute('disabled');\n\n        if (disabledNum) {\n          // Remove disabled attribute from buttons\n          disabledNum.removeAttribute('disabled');\n        }\n      }\n      // Check if element with class 'clearAll' exists when button with number is clicked\n      else if (document.querySelector('.clearAll')\n        && value !== '+'\n        && value !== '-'\n        && value !== '/'\n        && value !== '*'\n        && value !== 'AC'\n        && value !== '=') {\n        allAction.classList.remove('clearAll');\n        finishResult.classList.remove('clearAll');\n\n        // Set new value in fields 'allAction' and 'finishResult'\n        allAction.innerHTML = value;\n        finishResult.innerHTML = value;\n      }\n\n      // Display all value if clicked is button with number\n      else if (value !== '+'\n        || value !== '-'\n        || value !== '/'\n        || value !== '*'\n        || value !== 'AC'\n        || value !== '='\n      ) {\n        // Add new value to 'finishResult' field\n        finishResult.innerHTML += value;\n      }\n      else {\n        // Remove attribute disabled from equals button \n        equals.removeAttribute('disabled');\n        // Add new value to 'finishResult' field\n        finishResult.innerHTML += value;\n      };\n\n      // Handles for value of 'allAction' and 'finishResult' fields\n      let result = allAction.firstChild.nodeValue;\n      let actual = finishResult.firstChild.nodeValue;\n\n      // Check length of introduced number\n      if (actual.length > 10 && e.target.attributes[1].value === 'small num') {\n        // If checked length is too long, block posibilities to put next sign\n        e.target.setAttribute('disabled', 'true');\n      } else {\n        e.target.removeAttribute('disabled');\n      }\n\n      // Set states of application\n      this.setState({\n        result: result,\n        actual: actual\n      });\n\n      // Functionality for '=' button\n      if (value === '=') {\n\n        // Add class 'clearAll' to 'allAction' and 'finishResult' fields\n        allAction.classList.add('clearAll');\n        finishResult.classList.add('clearAll');\n\n        // Define parser with expr-eval\n        let Parser = require('expr-eval').Parser;\n\n        // Handle for result\n        let score = Parser.evaluate(this.state.result);\n\n        // Add attribute disabled to equals button \n        equals.setAttribute('disabled', 'true');\n\n        // Condition for result of except with 0.1+0.2 in JS\n        if (allAction.firstChild.nodeValue === '0.1+0.2='\n          || allAction.firstChild.nodeValue === '0.2+0.1='\n          || allAction.firstChild.nodeValue === '.1+.2='\n          || allAction.firstChild.nodeValue === '0.1+.2='\n          || allAction.firstChild.nodeValue === '.1+0.2='\n          || allAction.firstChild.nodeValue === '0.2+.1='\n          || allAction.firstChild.nodeValue === '0.1+.2='\n          || allAction.firstChild.nodeValue === '.2+.1=') {\n          score = score.toFixed(1); // 0.3\n        }\n\n        // Handle for length of result\n        let scoreStr = score.toString();\n        let strLength = scoreStr.length;\n\n        // Functionality for long numbers\n        if (strLength > 15) {\n          // If result number is too long, shorten it\n          let shortScore = score.toPrecision(15);\n          this.setState({\n            result: shortScore,\n            actual: shortScore\n          });\n\n        } else {\n          this.setState({\n            result: score,\n            actual: score\n          });\n        }\n      }\n    }\n    e.stopPropagation();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"container\">\n          <Display\n            result={this.state.result}\n            actual={this.state.actual}\n          />\n          <Form\n            displayVal={this.displayVal}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './scss/style.scss';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}